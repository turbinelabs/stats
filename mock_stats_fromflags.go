// Automatically generated by MockGen. DO NOT EDIT!
// Source: stats_fromflags.go

package stats

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of statsFromFlags interface
type mockStatsFromFlags struct {
	ctrl     *gomock.Controller
	recorder *_MockStatsFromFlagsRecorder
}

// Recorder for mockStatsFromFlags (not exported)
type _MockStatsFromFlagsRecorder struct {
	mock *mockStatsFromFlags
}

func newMockStatsFromFlags(ctrl *gomock.Controller) *mockStatsFromFlags {
	mock := &mockStatsFromFlags{ctrl: ctrl}
	mock.recorder = &_MockStatsFromFlagsRecorder{mock}
	return mock
}

func (_m *mockStatsFromFlags) EXPECT() *_MockStatsFromFlagsRecorder {
	return _m.recorder
}

func (_m *mockStatsFromFlags) Validate() error {
	ret := _m.ctrl.Call(_m, "Validate")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatsFromFlagsRecorder) Validate() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Validate")
}

func (_m *mockStatsFromFlags) Make(classifyStatusCodes bool) (Stats, error) {
	ret := _m.ctrl.Call(_m, "Make", classifyStatusCodes)
	ret0, _ := ret[0].(Stats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockStatsFromFlagsRecorder) Make(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Make", arg0)
}
