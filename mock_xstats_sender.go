// Automatically generated by MockGen. DO NOT EDIT!
// Source: xstats_sender.go

package stats

import (
	gomock "github.com/golang/mock/gomock"
	time "time"
)

// Mock of xstatsSender interface
type mockXstatsSender struct {
	ctrl     *gomock.Controller
	recorder *_MockXstatsSenderRecorder
}

// Recorder for mockXstatsSender (not exported)
type _MockXstatsSenderRecorder struct {
	mock *mockXstatsSender
}

func newMockXstatsSender(ctrl *gomock.Controller) *mockXstatsSender {
	mock := &mockXstatsSender{ctrl: ctrl}
	mock.recorder = &_MockXstatsSenderRecorder{mock}
	return mock
}

func (_m *mockXstatsSender) EXPECT() *_MockXstatsSenderRecorder {
	return _m.recorder
}

func (_m *mockXstatsSender) Gauge(stat string, value float64, tags ...string) {
	_s := []interface{}{stat, value}
	for _, _x := range tags {
		_s = append(_s, _x)
	}
	_m.ctrl.Call(_m, "Gauge", _s...)
}

func (_mr *_MockXstatsSenderRecorder) Gauge(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Gauge", _s...)
}

func (_m *mockXstatsSender) Count(stat string, count float64, tags ...string) {
	_s := []interface{}{stat, count}
	for _, _x := range tags {
		_s = append(_s, _x)
	}
	_m.ctrl.Call(_m, "Count", _s...)
}

func (_mr *_MockXstatsSenderRecorder) Count(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Count", _s...)
}

func (_m *mockXstatsSender) Histogram(stat string, value float64, tags ...string) {
	_s := []interface{}{stat, value}
	for _, _x := range tags {
		_s = append(_s, _x)
	}
	_m.ctrl.Call(_m, "Histogram", _s...)
}

func (_mr *_MockXstatsSenderRecorder) Histogram(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Histogram", _s...)
}

func (_m *mockXstatsSender) Timing(stat string, value time.Duration, tags ...string) {
	_s := []interface{}{stat, value}
	for _, _x := range tags {
		_s = append(_s, _x)
	}
	_m.ctrl.Call(_m, "Timing", _s...)
}

func (_mr *_MockXstatsSenderRecorder) Timing(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Timing", _s...)
}
