// Automatically generated by MockGen. DO NOT EDIT!
// Source: stats.go

package stats

import (
	gomock "github.com/golang/mock/gomock"
	time "time"
)

// Mock of Stats interface
type MockStats struct {
	ctrl     *gomock.Controller
	recorder *_MockStatsRecorder
}

// Recorder for MockStats (not exported)
type _MockStatsRecorder struct {
	mock *MockStats
}

func NewMockStats(ctrl *gomock.Controller) *MockStats {
	mock := &MockStats{ctrl: ctrl}
	mock.recorder = &_MockStatsRecorder{mock}
	return mock
}

func (_m *MockStats) EXPECT() *_MockStatsRecorder {
	return _m.recorder
}

func (_m *MockStats) Inc(_param0 string, _param1 int64) error {
	ret := _m.ctrl.Call(_m, "Inc", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatsRecorder) Inc(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Inc", arg0, arg1)
}

func (_m *MockStats) Gauge(_param0 string, _param1 int64) error {
	ret := _m.ctrl.Call(_m, "Gauge", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatsRecorder) Gauge(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Gauge", arg0, arg1)
}

func (_m *MockStats) TimingDuration(_param0 string, _param1 time.Duration) error {
	ret := _m.ctrl.Call(_m, "TimingDuration", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatsRecorder) TimingDuration(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "TimingDuration", arg0, arg1)
}
