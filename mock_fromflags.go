// Code generated by MockGen. DO NOT EDIT.
// Source: fromflags.go

// Package stats is a generated GoMock package.
package stats

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFromFlags is a mock of FromFlags interface
type MockFromFlags struct {
	ctrl     *gomock.Controller
	recorder *MockFromFlagsMockRecorder
}

// MockFromFlagsMockRecorder is the mock recorder for MockFromFlags
type MockFromFlagsMockRecorder struct {
	mock *MockFromFlags
}

// NewMockFromFlags creates a new mock instance
func NewMockFromFlags(ctrl *gomock.Controller) *MockFromFlags {
	mock := &MockFromFlags{ctrl: ctrl}
	mock.recorder = &MockFromFlagsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFromFlags) EXPECT() *MockFromFlagsMockRecorder {
	return m.recorder
}

// Validate mocks base method
func (m *MockFromFlags) Validate() error {
	ret := m.ctrl.Call(m, "Validate")
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate
func (mr *MockFromFlagsMockRecorder) Validate() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockFromFlags)(nil).Validate))
}

// Make mocks base method
func (m *MockFromFlags) Make() (Stats, error) {
	ret := m.ctrl.Call(m, "Make")
	ret0, _ := ret[0].(Stats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Make indicates an expected call of Make
func (mr *MockFromFlagsMockRecorder) Make() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Make", reflect.TypeOf((*MockFromFlags)(nil).Make))
}

// Node mocks base method
func (m *MockFromFlags) Node() string {
	ret := m.ctrl.Call(m, "Node")
	ret0, _ := ret[0].(string)
	return ret0
}

// Node indicates an expected call of Node
func (mr *MockFromFlagsMockRecorder) Node() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Node", reflect.TypeOf((*MockFromFlags)(nil).Node))
}

// Source mocks base method
func (m *MockFromFlags) Source() string {
	ret := m.ctrl.Call(m, "Source")
	ret0, _ := ret[0].(string)
	return ret0
}

// Source indicates an expected call of Source
func (mr *MockFromFlagsMockRecorder) Source() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Source", reflect.TypeOf((*MockFromFlags)(nil).Source))
}
