// Automatically generated by MockGen. DO NOT EDIT!
// Source: metrics_collector_fromflags.go

package handler

import (
	gomock "github.com/golang/mock/gomock"
	log "log"
)

// Mock of MetricsCollectorFromFlags interface
type MockMetricsCollectorFromFlags struct {
	ctrl     *gomock.Controller
	recorder *_MockMetricsCollectorFromFlagsRecorder
}

// Recorder for MockMetricsCollectorFromFlags (not exported)
type _MockMetricsCollectorFromFlagsRecorder struct {
	mock *MockMetricsCollectorFromFlags
}

func NewMockMetricsCollectorFromFlags(ctrl *gomock.Controller) *MockMetricsCollectorFromFlags {
	mock := &MockMetricsCollectorFromFlags{ctrl: ctrl}
	mock.recorder = &_MockMetricsCollectorFromFlagsRecorder{mock}
	return mock
}

func (_m *MockMetricsCollectorFromFlags) EXPECT() *_MockMetricsCollectorFromFlagsRecorder {
	return _m.recorder
}

func (_m *MockMetricsCollectorFromFlags) Validate() error {
	ret := _m.ctrl.Call(_m, "Validate")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockMetricsCollectorFromFlagsRecorder) Validate() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Validate")
}

func (_m *MockMetricsCollectorFromFlags) Make(_param0 *log.Logger) (MetricsCollector, error) {
	ret := _m.ctrl.Call(_m, "Make", _param0)
	ret0, _ := ret[0].(MetricsCollector)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockMetricsCollectorFromFlagsRecorder) Make(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Make", arg0)
}
