// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/falun/genny

package requestcontext

import (
	"net/http"

	"github.com/turbinelabs/server/handler/requestcontext"
)

type setTracker struct {
	calledOnReq *http.Request
	calledFor   interface{}
	calledWith  interface{}
	calledCount int
}

type getTracker struct {
	calledOnReq *http.Request
	calledFor   interface{}
	returnValue interface{}
	returnBool  bool
	calledCount int
}

type delTracker struct {
	calledOnReq *http.Request
	calledFor   interface{}
	calledCount int
}

func mkCtx(request *http.Request) (RequestContext, *setTracker, *getTracker, *delTracker) {
	st := &setTracker{}
	gt := &getTracker{}
	dt := &delTracker{}

	set := func(req *http.Request, key, value interface{}) {
		st.calledOnReq = req
		st.calledFor = key
		st.calledWith = value
		st.calledCount += 1
	}

	get := func(req *http.Request, key interface{}) (interface{}, bool) {
		gt.calledOnReq = req
		gt.calledFor = key
		gt.calledCount += 1
		return gt.returnValue, gt.returnBool
	}

	del := func(req *http.Request, key interface{}) {
		dt.calledOnReq = req
		dt.calledFor = key
		dt.calledCount += 1
	}

	return NewWithFunctions(
		request,
		requestcontext.SetFn(set),
		requestcontext.GetFn(get),
		requestcontext.DeleteFn(del),
	), st, gt, dt
}
